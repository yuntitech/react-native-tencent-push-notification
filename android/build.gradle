buildscript {
    // Buildscript is evaluated before everything else so we can't use safeExtGet
    def kotlinVersion = rootProject.ext.has('kotlinVersion') ? rootProject.ext.get('kotlinVersion') : '1.3.40'

    repositories {
        jcenter()
        google()
        maven {url 'http://developer.huawei.com/repo/'}     // 华为 maven 仓库地址
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath 'com.huawei.agconnect:agcp:1.3.1.300'     // 华为推送 gradle 插件依赖

    }
}

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

apply plugin: 'com.android.library'
apply plugin: 'com.huawei.agconnect'      // HMS SDK gradle 插件
import groovy.json.JsonSlurper

android {
    def configJson = new JsonSlurper().parse(file("${rootProject.rootDir}/app/src/main/assets/config.json"))

    compileSdkVersion safeExtGet('compileSdkVersion', 28)
    buildToolsVersion safeExtGet('buildToolsVersion', '28.0.3')

    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', 16)
        targetSdkVersion safeExtGet('targetSdkVersion', 28)
        versionCode 1
        versionName "1.0"

        consumerProguardFiles 'proguard-rules.pro'

        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
        manifestPlaceholders = [
                XG_ACCESS_ID : getValNotNull(configJson.androidPushAppId),
                XG_ACCESS_KEY : getValNotNull(configJson.androidPushAppKey),
                XG_SERVER_SUFFIX :getXGServerSuffix(configJson.xgServerSuffix)
        ]
    }
    lintOptions {
        abortOnError false
    }
}

static String getValNotNull(String val) {
    return val != null ? val : ""
}

static String getXGServerSuffix(String server){
    return server != null ? server : "tpns.tencent.com"
}

dependencies {
    implementation "com.facebook.react:react-native:${safeExtGet('reactNativeVersion', '+')}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${safeExtGet('kotlinVersion', '1.3.40')}"

    implementation "me.leolin:ShortcutBadger:1.1.22@aar"

    implementation "com.facebook.react:react-native:${safeExtGet('reactNativeVersion', '+')}"
    implementation 'com.tencent.jg:jg:1.1'
    implementation 'com.tencent.tpns:tpns:1.2.1.1-release' //  TPNS 推送 [VERSION] 为当前SDK版本号，版本号可在 SDK 下载页查看
    implementation 'com.tencent.tpns:xiaomi:1.2.1.1-release'//小米推送 [VERSION] 为当前 SDK 版本号，版本号可在 SDK 下载页查看

    implementation 'com.tencent.tpns:huawei:v3-1.0.0.0-release'      // 适用于 HMS Core 版本的 TPNS 插件
    implementation 'com.huawei.hms:push:5.0.2.300' 
    implementation 'com.tencent.tpns:meizu:1.2.1.1-release'//meizu 推送 [VERSION] 为当前 SDK 版本号，版本号可在 SDK 下载页查看

}

apply plugin: 'kotlin-android'
