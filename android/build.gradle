buildscript {
    // Buildscript is evaluated before everything else so we can't use safeExtGet
    def kotlinVersion = rootProject.ext.has('kotlinVersion') ? rootProject.ext.get('kotlinVersion') : '1.3.40'
    def tpnsSdkVersion = '1.3.3.3'

    repositories {
        jcenter()
        google()
        maven {url 'http://developer.huawei.com/repo/'}     // 华为 maven 仓库地址
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        //如果主工程中也有引用请保证版本一致
        classpath 'com.huawei.agconnect:agcp:1.6.0.300'     // 华为推送 gradle 插件依赖

    }
}

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

apply plugin: 'com.android.library'
//需要在主工程中应用级gradle文件中配置相同代码
apply plugin: 'com.huawei.agconnect'      // HMS SDK gradle 插件
import groovy.json.JsonSlurper

android {

    compileSdkVersion safeExtGet('compileSdkVersion', 28)
    buildToolsVersion safeExtGet('buildToolsVersion', '28.0.3')

    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', 16)
        targetSdkVersion safeExtGet('targetSdkVersion', 28)
        versionCode 1
        versionName "1.0"

        consumerProguardFiles 'proguard-rules.pro'

        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
        //请在主工程中添加如下配置
        // def configJson = new JsonSlurper().parse(file("${rootProject.rootDir}/app/src/main/assets/config.json"))
        // manifestPlaceholders = [
        //         XG_ACCESS_ID     : getValNotNull(configJson.androidPushAppId),
        //         XG_ACCESS_KEY    : getValNotNull(configJson.androidPushAppKey),
        //         XG_SERVER_SUFFIX : getXGServerSuffix(configJson.xgServerSuffix),
        //         VIVO_APPID       : getValNotNull(configJson.vivoAppId),
        //         VIVO_APPKEY      : getValNotNull(configjson.vivoAppKey)
        // ]
    }
    lintOptions {
        abortOnError false
    }
}

// static String getValNotNull(String val) {
//     return val != null ? val : ""
// }

// static String getXGServerSuffix(String server){
//     return server != null ? server : "tpns.tencent.com"
// }

dependencies {
    implementation "com.facebook.react:react-native:${safeExtGet('reactNativeVersion', '+')}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${safeExtGet('kotlinVersion', '1.3.40')}"

    implementation "me.leolin:ShortcutBadger:1.1.22@aar"

    implementation "com.facebook.react:react-native:${safeExtGet('reactNativeVersion', '+')}"
    implementation 'com.tencent.jg:jg:1.1'
    implementation 'com.tencent.tpns:tpns:1.3.7.2-release' //  TPNS 推送 [VERSION] 为当前SDK版本号，版本号可在 SDK 下载页查看
    implementation 'com.tencent.tpns:xiaomi:1.3.7.2-release'//小米推送 [VERSION] 为当前 SDK 版本号，版本号可在 SDK 下载页查看

    implementation 'com.tencent.tpns:huawei:1.3.7.2-release'      // 适用于 HMS Core 版本的 TPNS 插件
    implementation 'com.huawei.hms:push:6.7.0.300'
    implementation 'com.tencent.tpns:meizu:1.3.7.2-release'//meizu 推送 [VERSION] 为当前 SDK 版本号，版本号可在 SDK 下载页查看
    implementation 'com.tencent.tpns:vivo:1.3.7.2-release' // vivo  推送 [VERSION] 为当前 SDK 版本号,版本号可在 Android SDK 发布动态查看
    implementation 'com.tencent.tpns:oppo:1.3.7.2-release'//OPPO 推送 [VERSION] 为当前 SDK 版本号，版本号可在 Android SDK 发布动态查看

}

apply plugin: 'kotlin-android'